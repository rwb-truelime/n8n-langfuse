services:
  postgres-otel-dev:
    image: postgres:15-alpine
    container_name: n8n-postgres-otel-dev
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n
      POSTGRES_DB: n8n
    volumes:
      - postgres_otel_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  n8n:
    build: .  # Add build context to build the n8n-langfuse image
    # image: n8n-langfuse  # Comment out since we're building locally
    container_name: n8n-langfuse
    depends_on:
      postgres-otel-dev:
        condition: service_healthy
    ports:
      - "5678:5678"
    volumes:
      - n8n_otel_data:/home/node/.n8n
      # Optional: live-debug your tracing.js or entrypoint (uncomment if needed)
      # - ./tracing/tracing.js:/opt/opentelemetry/tracing.js
      # - ./docker-entrypoint.sh:/docker-entrypoint.sh
    environment:
      # Database connection
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-otel-dev
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
    restart: unless-stopped
    env_file: .env

volumes:
  postgres_otel_data:
  n8n_otel_data:
